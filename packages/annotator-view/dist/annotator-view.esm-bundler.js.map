{"version":3,"file":"annotator-view.esm-bundler.js","sources":["../../annotator-core/src/enums/elements.ts","../../annotator-text/src/index.ts","../src/index.ts"],"sourcesContent":["export enum HTML_NODE_ENUMS {\n    SPAN = 'SPAN',\n    BR = 'br',\n    DIV = 'div'\n}","import {HTML_NODE_ENUMS} from '@molar/annotator-core'\n\nclass Text{\n    readonly textContent:string;\n    readonly parentNode:HTMLElement;\n    readonly needsBR: boolean\n    readonly className: string\n    readonly isLabeled: boolean\n    public currentNode : HTMLElement|null\n    constructor(parentNode:HTMLElement,textContent:string,needsBR:boolean = false,className:string,isLabeled:boolean){\n        this.currentNode = null\n        this.parentNode = parentNode;\n        this.isLabeled = isLabeled\n        this.textContent = textContent\n        this.className = className\n        this.needsBR = needsBR\n        this.generateTextNode()\n        // generator BR\n        // const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n        // this.parentNode.appendChild(brNode)\n    }\n    private generateTextNode(){\n        const divNode = document.createElement(HTML_NODE_ENUMS.DIV)\n        const spanNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        spanNode.className = this.className\n        spanNode.innerText = this.textContent\n        this.currentNode = divNode\n        this.currentNode.style.display = \"inline\"\n        this.currentNode.appendChild(spanNode)\n        if(this.needsBR){\n            console.log(this.needsBR)\n            const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n            this.currentNode.appendChild(brNode)\n        }\n        this.parentNode.appendChild(divNode)\n    }\n    public addChildNodeToText(parentNode:HTMLElement,textContent:string,className:string){\n        const textNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        textNode.innerText = textContent\n        textNode.className = className\n        parentNode.appendChild(textNode)\n    }\n}\n\nexport {Text}","import {Core} from '@molar/annotator-core'\nimport {Text} from '@molar/annotator-text'\n\nexport type TextNode = {\n    text: Text,\n    _molar_text_id: number\n}\n\nclass View {\n    readonly root:Core\n    readonly textNodeList:TextNode[]\n    constructor(root:Core){\n        this.root = root\n        this.textNodeList = []\n        this.generatorTextNode()\n        this.registerViewEventHandler()\n    }\n    private generatorTextNode(){\n        console.log(\"view generator\")\n        const parentNode = this.root.element\n        const spanTextArr = this.root.data.split(this.root.splitRegExp)\n        for(let i=0;i<spanTextArr.length;i++){\n            const textNode = new Text(parentNode,spanTextArr[i],true,\"\",false)\n            this.textNodeList.push({\n                text: textNode,\n                _molar_text_id: i\n            })\n        }\n    }\n    private registerViewEventHandler(){\n        this.root.element.onmouseup = function(e){\n            this.root.textSelectionHandler.textSelection(e)\n        }.bind(this)\n    }\n    private renderViewByTextNodeList(textNodeList: TextNode[]){\n        console.log(textNodeList)\n        // remove all text\n        for(let i=0;i<this.root.element.children.length;i++){\n            this.root.element.removeChild(this.root.element.children[i])\n        }\n        for(const item of textNodeList){\n            this.root.element.appendChild(item.text.currentNode)\n        }\n    }\n    public UpdateTextNodeListIndex(insertArr:TextNode[],id:number){\n        this.textNodeList.splice(id,1,...insertArr)\n        for(let i=0;i<this.textNodeList.length;i++){\n            this.textNodeList[i]._molar_text_id = i\n        }\n        this.renderViewByTextNodeList(this.textNodeList)\n    }\n    \n}\nexport {View}"],"names":[],"mappings":"AAAA,IAAY,eAIX,CAAA;AAJD,CAAA,UAAY,eAAe,EAAA;AACvB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;AACT,IAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;AACf,CAAC,EAJW,eAAe,KAAf,eAAe,GAI1B,EAAA,CAAA,CAAA;;ACFD,MAAM,IAAI,CAAA;AACG,IAAA,WAAW,CAAQ;AACnB,IAAA,UAAU,CAAa;AACvB,IAAA,OAAO,CAAS;AAChB,IAAA,SAAS,CAAQ;AACjB,IAAA,SAAS,CAAS;AACpB,IAAA,WAAW,CAAmB;IACrC,WAAY,CAAA,UAAsB,EAAC,WAAkB,EAAC,UAAkB,KAAK,EAAC,SAAgB,EAAC,SAAiB,EAAA;AAC5G,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;AACvB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAC1B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAC1B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAA;;;;KAI1B;IACO,gBAAgB,GAAA;QACpB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;QAC3D,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;AAC7D,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;AACnC,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAA;AACrC,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAA;QAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;AACzC,QAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;QACtC,IAAG,IAAI,CAAC,OAAO,EAAC;AACZ,YAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YACzB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAA;AACzD,YAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;AACvC,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;KACvC;AACM,IAAA,kBAAkB,CAAC,UAAsB,EAAC,WAAkB,EAAC,SAAgB,EAAA;QAChF,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;AAC7D,QAAA,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAA;AAChC,QAAA,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAA;AAC9B,QAAA,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;KACnC;AACJ;;AClCD,MAAM,IAAI,CAAA;AACG,IAAA,IAAI,CAAK;AACT,IAAA,YAAY,CAAW;AAChC,IAAA,WAAA,CAAY,IAAS,EAAA;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,QAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAA;QACxB,IAAI,CAAC,wBAAwB,EAAE,CAAA;KAClC;IACO,iBAAiB,GAAA;AACrB,QAAA,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;AAC7B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAA;AACpC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AAC/D,QAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,WAAW,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;AACjC,YAAA,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,EAAC,WAAW,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAC,KAAK,CAAC,CAAA;AAClE,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACnB,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,cAAc,EAAE,CAAC;AACpB,aAAA,CAAC,CAAA;AACL,SAAA;KACJ;IACO,wBAAwB,GAAA;QAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,UAAS,CAAC,EAAA;YACpC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;AACnD,SAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACf;AACO,IAAA,wBAAwB,CAAC,YAAwB,EAAA;AACrD,QAAA,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;;AAEzB,QAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;AAChD,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AAC/D,SAAA;AACD,QAAA,KAAI,MAAM,IAAI,IAAI,YAAY,EAAC;AAC3B,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;AACvD,SAAA;KACJ;IACM,uBAAuB,CAAC,SAAoB,EAAC,EAAS,EAAA;AACzD,QAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC,EAAC,GAAG,SAAS,CAAC,CAAA;AAC3C,QAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACvC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAA;AAC1C,SAAA;AACD,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;KACnD;AAEJ;;;;"}