{"version":3,"file":"annotator-text.global.js","sources":["../../annotator-core/src/enums/elements.ts","../src/index.ts"],"sourcesContent":["export enum HTML_NODE_ENUMS {\n    SPAN = 'SPAN',\n    BR = 'br',\n    DIV = 'div'\n}","import {HTML_NODE_ENUMS} from '@molar/annotator-core'\n\nclass Text{\n    readonly textContent:string;\n    readonly parentNode:HTMLElement;\n    readonly needsBR: boolean\n    readonly className: string\n    readonly isLabeled: boolean\n    public currentNode : HTMLElement|null\n    constructor(parentNode:HTMLElement,textContent:string,needsBR:boolean = false,className:string,isLabeled:boolean){\n        this.currentNode = null\n        this.parentNode = parentNode;\n        this.isLabeled = isLabeled\n        this.textContent = textContent\n        this.className = className\n        this.needsBR = needsBR\n        this.generateTextNode()\n        // generator BR\n        // const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n        // this.parentNode.appendChild(brNode)\n    }\n    private generateTextNode(){\n        const divNode = document.createElement(HTML_NODE_ENUMS.DIV)\n        const spanNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        spanNode.className = this.className\n        spanNode.innerText = this.textContent\n        this.currentNode = divNode\n        this.currentNode.style.display = \"inline\"\n        this.currentNode.appendChild(spanNode)\n        if(this.needsBR){\n            console.log(this.needsBR)\n            const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n            this.currentNode.appendChild(brNode)\n        }\n        this.parentNode.appendChild(divNode)\n    }\n    public addChildNodeToText(parentNode:HTMLElement,textContent:string,className:string){\n        const textNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        textNode.innerText = textContent\n        textNode.className = className\n        parentNode.appendChild(textNode)\n    }\n}\n\nexport {Text}"],"names":[],"mappings":";;;IAAA,IAAY,eAIX,CAAA;IAJD,CAAA,UAAY,eAAe,EAAA;IACvB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,eAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;IACT,IAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;IACf,CAAC,EAJW,eAAe,KAAf,eAAe,GAI1B,EAAA,CAAA,CAAA;;ICFD,MAAM,IAAI,CAAA;IACG,IAAA,WAAW,CAAQ;IACnB,IAAA,UAAU,CAAa;IACvB,IAAA,OAAO,CAAS;IAChB,IAAA,SAAS,CAAQ;IACjB,IAAA,SAAS,CAAS;IACpB,IAAA,WAAW,CAAmB;QACrC,WAAY,CAAA,UAAsB,EAAC,WAAkB,EAAC,UAAkB,KAAK,EAAC,SAAgB,EAAC,SAAiB,EAAA;IAC5G,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACvB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC7B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC1B,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;IAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC1B,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;YACtB,IAAI,CAAC,gBAAgB,EAAE,CAAA;;;;SAI1B;QACO,gBAAgB,GAAA;YACpB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;YAC3D,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;IAC7D,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IACnC,QAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAA;IACrC,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAA;YAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAA;IACzC,QAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;YACtC,IAAG,IAAI,CAAC,OAAO,EAAC;IACZ,YAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;gBACzB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAA;IACzD,YAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;IACvC,SAAA;IACD,QAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;SACvC;IACM,IAAA,kBAAkB,CAAC,UAAsB,EAAC,WAAkB,EAAC,SAAgB,EAAA;YAChF,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAA;IAC7D,QAAA,QAAQ,CAAC,SAAS,GAAG,WAAW,CAAA;IAChC,QAAA,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAA;IAC9B,QAAA,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;SACnC;IACJ;;;;;;;;;;;;"}