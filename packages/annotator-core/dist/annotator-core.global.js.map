{"version":3,"file":"annotator-core.global.js","sources":["../../annotator-store/src/index.ts","../../annotator-text/src/index.ts","../../annotator-view/src/index.ts","../src/handler/textSelectionHandler.ts","../src/enums/elements.ts","../src/index.ts"],"sourcesContent":["import {Core} from '@molar/annotator-core'\nclass Store {\n    readonly root:Core\n    constructor(root:Core){\n        this.root = root\n    }\n}\nexport {Store}","import {HTML_NODE_ENUMS} from '@molar/annotator-core'\n\nclass Text{\n    readonly textContent:string;\n    readonly parentNode:HTMLElement;\n    readonly needsBR: boolean\n    readonly className: string\n    readonly isLabeled: boolean\n    public currentNode : HTMLElement|null\n    constructor(parentNode:HTMLElement,textContent:string,needsBR:boolean = false,className:string,isLabeled:boolean){\n        this.currentNode = null\n        this.parentNode = parentNode;\n        this.isLabeled = isLabeled\n        this.textContent = textContent\n        this.className = className\n        this.needsBR = needsBR\n        this.generateTextNode()\n        // generator BR\n        // const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n        // this.parentNode.appendChild(brNode)\n    }\n    private generateTextNode(){\n        const divNode = document.createElement(HTML_NODE_ENUMS.DIV)\n        const spanNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        spanNode.className = this.className\n        spanNode.innerText = this.textContent\n        this.currentNode = divNode\n        this.currentNode.style.display = \"inline\"\n        this.currentNode.appendChild(spanNode)\n        if(this.needsBR){\n            console.log(this.needsBR)\n            const brNode = document.createElement(HTML_NODE_ENUMS.BR)\n            this.currentNode.appendChild(brNode)\n        }\n        this.parentNode.appendChild(divNode)\n    }\n    public addChildNodeToText(parentNode:HTMLElement,textContent:string,className:string){\n        const textNode = document.createElement(HTML_NODE_ENUMS.SPAN)\n        textNode.innerText = textContent\n        textNode.className = className\n        parentNode.appendChild(textNode)\n    }\n}\n\nexport {Text}","import {Core} from '@molar/annotator-core'\nimport {Text} from '@molar/annotator-text'\n\nexport type TextNode = {\n    text: Text,\n    _molar_text_id: number\n}\n\nclass View {\n    readonly root:Core\n    readonly textNodeList:TextNode[]\n    constructor(root:Core){\n        this.root = root\n        this.textNodeList = []\n        this.generatorTextNode()\n        this.registerViewEventHandler()\n    }\n    private generatorTextNode(){\n        console.log(\"view generator\")\n        const parentNode = this.root.element\n        const spanTextArr = this.root.data.split(this.root.splitRegExp)\n        for(let i=0;i<spanTextArr.length;i++){\n            const textNode = new Text(parentNode,spanTextArr[i],true,\"\",false)\n            this.textNodeList.push({\n                text: textNode,\n                _molar_text_id: i\n            })\n        }\n    }\n    private registerViewEventHandler(){\n        this.root.element.onmouseup = function(e){\n            this.root.textSelectionHandler.textSelection(e)\n        }.bind(this)\n    }\n    private renderViewByTextNodeList(textNodeList: TextNode[]){\n        console.log(textNodeList)\n        // remove all text\n        for(let i=0;i<this.root.element.children.length;i++){\n            this.root.element.removeChild(this.root.element.children[i])\n        }\n        for(const item of textNodeList){\n            this.root.element.appendChild(item.text.currentNode)\n        }\n    }\n    public UpdateTextNodeListIndex(insertArr:TextNode[],id:number){\n        this.textNodeList.splice(id,1,...insertArr)\n        for(let i=0;i<this.textNodeList.length;i++){\n            this.textNodeList[i]._molar_text_id = i\n        }\n        this.renderViewByTextNodeList(this.textNodeList)\n    }\n    \n}\nexport {View}","import {Core} from '@molar/annotator-core'\nimport {Text} from '@molar/annotator-text'\nimport {TextNode} from '@molar/annotator-view'\nimport {HTML_NODE_ENUMS} from '@molar/annotator-core'\ntype SelectionInfo={\n    startNode:Node|null,\n    endNode: Node|null,\n    startIndex: number,\n    endIndex: number\n}\n\nclass TextSelectionHandler {\n    readonly root:Core\n    constructor(root:Core){\n        this.root = root\n    }\n    private getSelectionInfo():SelectionInfo|null{\n        const selection = window.getSelection()\n        let startElement = null\n        let endElement = null\n        try {\n            startElement = selection!.anchorNode.parentNode\n            endElement = selection!.focusNode.parentNode\n        }catch(e){\n            return null;\n        }\n        return {\n            startNode: startElement,\n            endNode: endElement,\n            startIndex: selection!.anchorOffset,\n            endIndex: selection!.focusOffset\n        } as SelectionInfo\n    }\n    private RenderInlineText(lineNode:Node,startIndex:number,endIndex:number){\n        console.log(lineNode)\n        const editSpan = this.root.view.textNodeList.find(e=>{\n            return e.text.currentNode.children[0] ==lineNode\n        })\n        const spanText = editSpan.text.textContent\n        const fontNode = {text:new Text(editSpan.text.currentNode,spanText.substring(0,startIndex),false,\"\",true),_molar_text_id:-1}\n        const labelNode = {text:new Text(editSpan.text.currentNode,spanText.substring(startIndex,endIndex),false,\"molar-annotator-text--labeled\",true),_molar_text_id:-1}\n        const afterNode = {text:new Text(editSpan.text.currentNode,spanText.substring(endIndex),!editSpan.text.isLabeled||endIndex!=spanText.length||spanText.substring(endIndex)==\"\",\"\",true),_molar_text_id:-1} \n        this.root.view.UpdateTextNodeListIndex([fontNode,labelNode,afterNode],editSpan._molar_text_id)\n    }   \n    private RenderOfflineText(startLineNode:Node,endLineNode:Node,startIndex:number,endIndex:number){\n        console.log(\"offline\")\n        // this.root.view.UpdateTextNodeListIndex()\n    }\n    private RenderText(selection:SelectionInfo){\n        if(selection.startNode == selection.endNode){\n            console.log(\"inline\")\n            this.RenderInlineText(selection.startNode,selection.startIndex,selection.endIndex)\n        }else{\n            console.log(\"offline\")\n            this.RenderOfflineText(selection.startNode,selection.endNode,selection.startIndex,selection.endIndex)\n        }\n    }\n    public textSelection(event:Event){\n        const selection = this.getSelectionInfo()\n        this.RenderText(selection)\n        \n    }\n}\nexport {TextSelectionHandler}","export enum HTML_NODE_ENUMS {\n    SPAN = 'SPAN',\n    BR = 'br',\n    DIV = 'div'\n}","import {Store} from '@molar/annotator-store'\nimport {View} from '@molar/annotator-view'\nimport {EventEmitter} from 'events';\nimport {TextSelectionHandler} from './handler/textSelectionHandler'\nimport {HTML_NODE_ENUMS} from './enums/index'\n\nclass Core extends EventEmitter{\n    // 1. dataContent\n    readonly data:string;\n    // 2. dataElement\n    readonly element:HTMLElement\n    // 3. dataRegExp\n    readonly splitRegExp:RegExp|null|undefined\n    // 4. textSelectionHandler\n    readonly textSelectionHandler:TextSelectionHandler\n    // 5. view\n    readonly view:View;\n    // 6. store\n    readonly store:Store;\n    constructor(data:string,element:HTMLElement,splitRegExp:RegExp|null|undefined = /\\n/){\n        super()\n        this.data = data\n        this.element = element\n        this.splitRegExp = splitRegExp\n        // init view\n        this.view = new View(this)\n        // init store\n        this.store = new Store(this)\n        // init textSelectionHandler\n        this.textSelectionHandler = new TextSelectionHandler(this)\n        // init labelSelectionHandler\n    }\n}\nexport {\n    Core,\n    HTML_NODE_ENUMS\n}"],"names":["HTML_NODE_ENUMS"],"mappings":"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"}