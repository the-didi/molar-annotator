{"version":3,"file":"annotator-core.global.js","sources":["../../annotator-store/src/index.ts","../../annotator-text/src/index.ts","../../annotator-view/src/index.ts","../src/handler/textSelectionHandler.ts","../src/enums/elements.ts","../src/enums/styles.ts","../src/index.ts"],"sourcesContent":["import {Core} from '@molar/annotator-core'\nclass Store {\n    readonly root:Core\n    constructor(root:Core){\n        this.root = root\n    }\n}\nexport {Store}","import {HTML_NODE_ENUMS} from '@molar/annotator-core'\nimport {MOLAR_LABEL_CLASS_NAME} from '@molar/annotator-core'\nclass Text{\n    readonly textContent:string;\n    readonly parentNode:HTMLElement|null;\n    readonly className: string\n    readonly childList: Text[];\n    public currentNode : HTMLElement|null\n    constructor(parentNode:HTMLElement,textContent:string,className:string){\n        this.currentNode = document.createElement(HTML_NODE_ENUMS.DIV)\n        this.childList = []\n        this.parentNode = parentNode;\n        this.textContent = textContent\n        this.className = className\n        this.generateTextNode()        \n    }\n    private generateTextNode(){\n        console.log(\"--generate current node--\")\n        this.currentNode.innerText = this.textContent\n        this.currentNode.className = this.className\n        if(this.parentNode!=null){\n            this.parentNode.appendChild(this.currentNode)\n        }\n    }\n    public addChildNodeToText(parentText:Text,childrenText:Text[]){\n        parentText.currentNode.innerText = \"\"\n        for(const item of childrenText){\n            parentText.currentNode.appendChild(item.currentNode)\n        }\n        this.childList.push(...childrenText)\n    }\n\n}\n\nfunction generateTextNode(textContent:string,isLabeled:boolean):Text{\n    const text = new Text(null,textContent,isLabeled?MOLAR_LABEL_CLASS_NAME.MOLAR_TEXT_LABLED:MOLAR_LABEL_CLASS_NAME.MOLAR_TEXT_UNLABELED)\n    return text\n}\n\nexport {Text,generateTextNode}","import {Core,MOLAR_LABEL_CLASS_NAME} from '@molar/annotator-core'\nimport {Text} from '@molar/annotator-text'\n\n\nclass View {\n    readonly root:Core\n    readonly textNodeList:Text[]\n    constructor(root:Core){\n        this.root = root\n        this.textNodeList = []\n        this.generatorTextNode()\n        this.registerViewEventHandler()\n    }\n    private generatorTextNode(){\n        console.log(\"view generator\")\n        const parentNode = this.root.element\n        const nodeArr = this.root.data.split(this.root.splitRegExp)\n        for(let i=0;i<nodeArr.length;i++){\n            const text = new Text(parentNode,nodeArr[i],MOLAR_LABEL_CLASS_NAME.MOLAR_TEXT_INITED)\n            this.textNodeList.push(text)\n        }\n    }\n    private registerViewEventHandler(){\n        this.root.element.onmouseup = function(e){\n            this.root.textSelectionHandler.textSelection(e)\n        }.bind(this)\n    }\n    private renderViewByTextNodeList(textNodeList: Text[]){\n        // remove all text\n        for(let i=0;i<this.root.element.children.length;i++){\n            this.root.element.removeChild(this.root.element.children[i])\n        }\n        for(const item of textNodeList){\n            this.root.element.appendChild(item.currentNode)\n        }\n    }\n\n    public findTextByNode(SelectedNode:Node):Text|null{\n        let searchTextList = this.root.view.textNodeList\n        function findNodeInTree(searchTextList:Text[],SelectedNode:Node):Text{\n            let result\n            for(let i=0;i<searchTextList.length;i++){\n                if(searchTextList[i].currentNode == SelectedNode){\n                    return searchTextList[i]\n                }\n                if(searchTextList[i].childList.length!=0){\n                    result = findNodeInTree(searchTextList[i].childList,SelectedNode)\n                }\n            }\n            return result\n        }\n        return findNodeInTree(searchTextList,SelectedNode)\n    }\n    public findTextIndex(node:Node):number{\n        let findNode:Text\n        let searchTextList = this.root.view.textNodeList\n        function findNodeInTree(searchTextList:Text[],SelectedNode:Node):Text{\n            let result\n            for(let i=0;i<searchTextList.length;i++){\n                if(searchTextList[i].currentNode == SelectedNode){\n                    return searchTextList[i]\n                }\n                if(searchTextList[i].childList.length!=0){\n                    result = findNodeInTree(searchTextList[i].childList,SelectedNode)\n                }\n            }\n            return result\n        }\n        findNode = findNodeInTree(searchTextList,node)\n        console.log(findNode)\n        if(findNode.parentNode!=null){\n            return this.textNodeList.findIndex(e=>{\n                return e == findNode\n            })\n        }else{\n            return this.textNodeList.findIndex(e=>{\n                return e.childList.find(e=>e==findNode)!=null\n            })\n        }\n    }\n\n}\nexport {View}","import {Core} from '@molar/annotator-core'\nimport {Text,generateTextNode} from '@molar/annotator-text'\nimport {HTML_NODE_ENUMS} from '@molar/annotator-core'\ntype SelectionInfo={\n    startNode:Node|null,\n    endNode: Node|null,\n    startIndex: number,\n    endIndex: number\n}\n\nclass TextSelectionHandler {\n    readonly root:Core\n    constructor(root:Core){\n        this.root = root\n    }\n    private getSelectionInfo():SelectionInfo|null{\n        const selection = window.getSelection()\n        let startElement = null\n        let endElement = null\n        try {\n            startElement = selection!.anchorNode.parentNode\n            endElement = selection!.focusNode.parentNode\n        }catch(e){\n            return null;\n        }\n        return {\n            startNode: startElement,\n            endNode: endElement,\n            startIndex: selection!.anchorOffset,\n            endIndex: selection!.focusOffset\n        } as SelectionInfo\n    }\n    private RenderInlineText(lineNode:Node,startIndex:number,endIndex:number){\n        if(endIndex!=-1){\n            const currentText = this.root.view.findTextByNode(lineNode)\n            let fontNode = generateTextNode(lineNode.textContent.substring(0,startIndex),false)\n            let labelNode = generateTextNode(lineNode.textContent.substring(startIndex,endIndex),true)\n            let afterNode = generateTextNode(lineNode.textContent.substring(endIndex),false)\n            currentText.addChildNodeToText(currentText,[fontNode,labelNode,afterNode])\n        }else{\n            const currentText = this.root.view.findTextByNode(lineNode)\n            const fontNode = generateTextNode(lineNode.textContent.substring(0,startIndex),false)\n            const labelNode = generateTextNode(lineNode.textContent.substring(startIndex),true)\n            currentText.addChildNodeToText(currentText,[fontNode,labelNode])\n        }\n    }   \n    private RenderOfflineText(startLineNode:Node,endLineNode:Node,startIndex:number,endIndex:number){\n        const startLineIndex = this.root.view.findTextIndex(startLineNode)\n        const endLineIndex = this.root.view.findTextIndex(endLineNode)\n        this.RenderInlineText(startLineNode,startIndex,-1)\n        this.RenderInlineText(endLineNode,0,endIndex)\n        for(let i=startLineIndex+1;i<endLineIndex;i++){\n            \n        }\n    }\n    private RenderText(selection:SelectionInfo){\n        if(selection.startNode == selection.endNode){\n            this.RenderInlineText(selection.startNode,selection.startIndex,selection.endIndex)\n        }else{\n            this.RenderOfflineText(selection.startNode,selection.endNode,selection.startIndex,selection.endIndex)\n        }\n    }\n    public textSelection(event:Event){\n        const selection = this.getSelectionInfo()\n        this.RenderText(selection)\n        \n    }\n}\nexport {TextSelectionHandler}","export enum HTML_NODE_ENUMS {\n    SPAN = 'SPAN',\n    BR = 'br',\n    DIV = 'div'\n}","export enum MOLAR_LABEL_CLASS_NAME{\n    MOLAR_TEXT_LABLED = \"molar-annotator-text--labeled\",\n    MOLAR_TEXT_UNLABELED = \"molar-annotator-text--unlabeled\",\n    MOLAR_TEXT_INITED = \"molar-annotator-text--inited\"\n}","import {Store} from '@molar/annotator-store'\nimport {View} from '@molar/annotator-view'\nimport {EventEmitter} from 'events';\nimport {TextSelectionHandler} from './handler/textSelectionHandler'\nimport {HTML_NODE_ENUMS,MOLAR_LABEL_CLASS_NAME} from './enums/index'\n\nclass Core extends EventEmitter{\n    // 1. dataContent\n    readonly data:string;\n    // 2. dataElement\n    readonly element:HTMLElement\n    // 3. dataRegExp\n    readonly splitRegExp:RegExp|null|undefined\n    // 4. textSelectionHandler\n    readonly textSelectionHandler:TextSelectionHandler\n    // 5. view\n    readonly view:View;\n    // 6. store\n    readonly store:Store;\n    constructor(data:string,element:HTMLElement,splitRegExp:RegExp|null|undefined = /\\n/){\n        super()\n        this.data = data\n        this.element = element\n        this.splitRegExp = splitRegExp\n        // init view\n        this.view = new View(this)\n        // init store\n        this.store = new Store(this)\n        // init textSelectionHandler\n        this.textSelectionHandler = new TextSelectionHandler(this)\n        // init labelSelectionHandler\n    }\n}\nexport {\n    Core,\n    HTML_NODE_ENUMS,\n    MOLAR_LABEL_CLASS_NAME\n}"],"names":["HTML_NODE_ENUMS","MOLAR_LABEL_CLASS_NAME"],"mappings":"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"}